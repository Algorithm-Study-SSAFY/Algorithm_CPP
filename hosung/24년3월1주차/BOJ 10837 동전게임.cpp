#include <iostream>
#include <cmath>

using namespace std;

/*
* 동점일 때는 무조건 가능한 점수 이다
* 동점이 아닐 경우
* 영희가 동수보다 점수가 높다면
* 최악의 상황에서
* 동수에게 이 전 라운드 에서 바라볼 때 기회가 있었는지 바라보아야한다
* 이 때 최악의 상황은 영희가 현재 라운드 동안 점수를 따는 시나리오다
* 이전 라운드에서 동수가 패배를 막을 수 있는 상황보다 악화가 되있다면 이미 게임이 끝났어야한다
* 그러므로 동수가 남은 라운드와 후공으로 인한 이전과 현재 라운드에서 점수를 따낼 수 있는 점수
* 즉,(K-M):남은라운드 + 이전 라운드 점수(1) + 현재라운드 점수(1) + 자시의 점수보다
* 영희의 점수가 크다면 가능한 점수가 아니다
* ex) K = 6
* 4 1 가능
* 이전 라운드 3 1 에서는 후공인 동수 차례에서 패배를 막는 상황이 가능하다
*
* 5 1 불가능
* 4 1 시점에서 이미 기회가 없음
*
* 동수가 영희보다 점수가 높다면
* 최악의 상황인 동수가 현재 라운드 동안 점수를 따는 시나리오다
* 영희가 이전 라운드에서 패배를 막을 수 있는 상황보다 악화가 되있다면 이미 게임이 끝났어야 했다
* 영희는 선공이므로
* 즉,(K-N):남은 라운드 + 이전 라운드 점수(1) + 자기 자신의 점수가 동수 점수가 크다면 가능한 점수가 아니다
* ex) K=8
* 1 5 가능
* 이전 라운드 0 4 => 1 5 시점에서 끝나는 것
* 이전 라운드 시작할때 점수는 0 4이므로 이때 영희가 점수를 모두 얻으면 무승부가 가능하다는 상황이 있는데
* 동수가 점수를 얻으면서 종료된 것이다. 선공시점에서는 가능성이 있으므로 가능하다
*
* 2 6 불가능
* 이전 라운드 1 5에서는 남은 경기에서 가능성을 볼수 없으므로 불가능하다
*/

int K, C;

int main() {

    ios::sync_with_stdio(false);
    cin.tie(0);

    cin >> K >> C;

    for (int i = 0; i < C; i++) {
        int M, N;
        cin >> M >> N;

        int dist = M - N;
        if (dist == 0) cout << 1 << "\n"; //동점이면 무조건 가능
        else {
            if (dist > 0) {
                if ((K - M) + N + 2 < M) cout << 0 << "\n";
                else cout << 1 << "\n";
            }
            else if (dist < 0) {
                if ((K - N + M) + 1 < N) cout << 0 << "\n";
                else cout << 1 << "\n";
            }
        }

    }

    return 0;
}