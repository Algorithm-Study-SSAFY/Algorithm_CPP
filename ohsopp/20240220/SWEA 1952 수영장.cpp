
/*
	dp 또는 dfs로 해결 가능한 문제
 	1일, 1달, 3달, 1년 요금이 들어오게 되는데, 여기서 1일은 1달로 치환해서 비교 가능하고 1년은 마지막 최종 비교 시에만 살펴보아도 되므로
	사실상 1달과 3달 요금만 살펴본다고 생각할 수 있다.
 	3달 요금은 3월부터 살펴보기 위해 범위 조건을 추가해야 하지만, i를 1~12가 아니라 3~14로 진행하면 if (i >= 3) 조건식 생략 가능하다.
	어차피 1달 요금으로 매 i마다 비교하기 때문에 3달치 요금과 1달치 요금 중 더 작은 것으로 매번 갱신된다.
 	이용 횟수가 0인 달에는 이전 달까지의 요금을 그대로 가져오면 되며 min의 1달치 계산 조건에서 m*a(1일 요금*이용 횟수)로 계산된다.
*/

#include <iostream>
using namespace std;

int t, a, b, c, d, m, dp[15];

int main(){
	cin >> t;
	for (int tc = 1; tc <= t; tc++) {
		cin >> a >> b >> c >> d;
		for (int i = 3; i <= 14; i++) {
			cin >> m;
			dp[i] = min(dp[i - 1] + min(m * a, b), dp[i - 3] + c);
		}
    	cout << "#" << tc << " " << min(d, dp[14]) << '\n';
	}
}
